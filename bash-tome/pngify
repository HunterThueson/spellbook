#!/usr/bin/env bash
# SPDX-License-Identifier: MIT

# Store original files in optional backup directory
backup_dir="${PWD}/backup"
 
# Handle fatal errors -- pass error message as arguments to function
fatal () {
    printf "$0: fatal error: $*\n" >&2
    exit 1
}

# (Temporarily) reject all invocations with more than 0 arguments
# Script will eventually allow several different options and should accept
# filenames as input (only assuming everything in $PWD if no args are given)
[[ ! $# = 0 ]] && fatal too many arguments

# Check whether backup directory exists and create it if necessary
if [[ ! ${backup_dir} = "" ]]; then
    [[ -d ${backup_dir} ]] || mkdir ${backup_dir}
fi

# If no arguments are supplied, assume all images (except .png files)
# in $PWD are to be converted
for ext in jpg jpeg webp; do
    for file in ${PWD}/*.${ext}; do

        # Don't try to mogrify *.${ext} if it doesn't exist
        [[ ! -e ${file} ]] && continue

        # Skip files that already have .png counterparts
        if [[ -e "${file%%.*}.png" ]]; then
            printf "$1 already exists, skipping conversion...\n" && continue;
        fi

        # Process image:
        magick mogrify \
            -quality 100 \
            -format png \
            -antialias \
            ${file} \
            && \
            mv ${file} ${backup_dir}/${file##*/}        # if backup flag is supplied

        # Confirmation message                          # should be dependent on
        printf "Successfully converted ${file}!\n"      # <- verbosity level
    done
done

exit 0
