#!/usr/bin/env bash

############
## pngify ## -- quickly and easily turn undesirable image formats into .png files!
############

fatal () {
    printf "$0: fatal: $*\n"
    exit 1
}

test_ext () {
    [[ $# != 1 ]] && fatal extension validity could not be determined
    case ${1##*.} in
        ("jpg"|"jpeg"|"webp") return 0;;
        ("png") printf "File $1 is already a .png, skipping conversion\n"; return 1;;
        (*) fatal Unknown option: $1;;
    esac
}

# check for help option(s)

# check for recursion flag

# check to see if any files will be overwritten during conversion process
# there should be an option to prompt for user (y/n) input if overwrite could be necessary
# default behavior should be to overwrite files which are smaller or lower resolution or older versions of the same file

# print persistent progress bar
    # should include a count of files converted, total files, files remaining, failed conversions,
    # and optionally number of files overwritten

# if '--log-file' option was supplied, write to both standard output and log file
# unless '-q' or '--quiet' was supplied as well, in which case write only to log file
# maybe have options for multiple verbosity levels? Might be overkill but could be interesting to write

# remove old files except when conversion failed if "--remove"/"-r"/whatever option is set

# print stats message upon command completion

# TODO: if no arguments are supplied, assume user wants to process all *.jpg *.jpeg *.webp etc. files in $PWD
[[ $# = 0 ]] && fatal not enough arguments

while [[ $1 != "" ]]
do
    test_ext $1
    [[ $? = 1 ]] && shift && continue
    if [[ -f $1 ]]; then
        mogrify -format png $1 && printf "Successfully converted $1 to png format\n"
    else
        printf "$1 does not exist! You're such a joker. :)\n"
    fi
    shift
done

exit 0
